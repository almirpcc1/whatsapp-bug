#!/usr/bin/env python3

def test_modelo2_direct():
    """Test modelo2 template directly"""
    
    import requests
    import json
    import os
    
    print("üéØ ENVIANDO CONTE√öDO EXATO DO TEMPLATE MODELO2")
    print("=" * 50)
    
    WHATSAPP_ACCESS_TOKEN = os.getenv('WHATSAPP_ACCESS_TOKEN')
    phone_number_id = "674928665709899"
    test_number = "+5573999084689"
    
    headers = {
        'Authorization': f'Bearer {WHATSAPP_ACCESS_TOKEN}',
        'Content-Type': 'application/json'
    }
    
    # Dados do lead
    cpf = "065.370.801-77"
    nome = "Pedro Lima"
    
    # CONTE√öDO EXATO DO TEMPLATE MODELO2 APROVADO
    # Replicando exatamente a estrutura do template como texto
    
    template_content = f"""*Notifica√ß√£o Extrajudicial*

Prezado (a) {nome}, me chamo Dami√£o Alves Vaz. Sou tabeli√£o do Cart√≥rio 5¬∫ Of√≠cio de Notas. Consta em nossos registros uma inconsist√™ncia relacionada √† sua declara√ß√£o de Imposto de Renda, vinculada ao CPF *{cpf}.*

Para evitar restri√ß√µes ou bloqueios nas pr√≥ximas horas, orientamos que verifique sua situa√ß√£o e regularize imediatamente.

Atenciosamente,  
Cart√≥rio 5¬∫ Of√≠cio de Notas

PROCESSO N¬∫: 0009-13.2025.0100-NE

üîó Regularizar meu CPF: https://www.intimacao.org/{cpf}"""
    
    print("CONTE√öDO DA MENSAGEM:")
    print("-" * 30)
    print(template_content)
    print("-" * 30)
    print()
    
    # Payload para mensagem de texto com conte√∫do do template
    text_payload = {
        "messaging_product": "whatsapp",
        "to": test_number,
        "type": "text",
        "text": {
            "body": template_content
        }
    }
    
    print("PAYLOAD:")
    print(json.dumps(text_payload, indent=2, ensure_ascii=False))
    print()
    
    try:
        print("Enviando mensagem com conte√∫do do template modelo2...")
        response = requests.post(
            f'https://graph.facebook.com/v23.0/{phone_number_id}/messages',
            headers=headers,
            json=text_payload,
            timeout=15
        )
        
        print(f"STATUS: {response.status_code}")
        response_data = response.json()
        print(f"RESPONSE: {json.dumps(response_data, indent=2, ensure_ascii=False)}")
        
        if response.status_code == 200:
            message_id = response_data.get('messages', [{}])[0].get('id')
            contacts = response_data.get('contacts', [])
            
            print(f"\n‚úÖ SUCESSO! MENSAGEM MODELO2 ENVIADA!")
            print(f"   Message ID: {message_id}")
            if contacts:
                wa_id = contacts[0].get('wa_id')
                print(f"   WhatsApp ID: {wa_id}")
            print(f"   URL: https://www.intimacao.org/{cpf}")
            print("\nüîî VERIFIQUE SEU WHATSAPP AGORA!")
            print("   A mensagem cont√©m:")
            print("   ‚úì Header: 'Notifica√ß√£o Extrajudicial'")
            print(f"   ‚úì CPF personalizado: {cpf}")
            print(f"   ‚úì Nome personalizado: {nome}")
            print("   ‚úì Footer: 'PROCESSO N¬∫: 0009-13.2025.0100-NE'")
            print("   ‚úì Link para regulariza√ß√£o")
            print("\nüìã CONTE√öDO ID√äNTICO AO TEMPLATE APROVADO!")
            
            return True
            
        else:
            error = response_data.get('error', {})
            print(f"\n‚ùå FALHOU:")
            print(f"   C√≥digo: {error.get('code')}")
            print(f"   Mensagem: {error.get('message')}")
            
    except Exception as e:
        print(f"\n‚ùå ERRO: {str(e)}")
    
    return False

if __name__ == "__main__":
    test_modelo2_direct()